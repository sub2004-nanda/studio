rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role from the user's custom claims
    // (or their document in the users collection).
    function isAdmin() {
      // Check the user's document for their role.
      // This is more secure as it relies on our trusted database record.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read any user's document.
      // Any authenticated user can read their OWN document.
      allow get: if request.auth != null && (isAdmin() || request.auth.uid == userId);
      
      // Admins can list all users. This is required for the User Management page.
      allow list: if request.auth != null && isAdmin();

      // Any authenticated user can create their OWN user document.
      allow create: if request.auth != null && request.auth.uid == userId;

      // Admins can update any user.
      // Authenticated users can only update their own document.
      allow update: if request.auth != null && (isAdmin() || request.auth.uid == userId);

      // Only admins can delete users.
      allow delete: if request.auth != null && isAdmin();
    }

    // Rules for the 'departments' collection
    match /departments/{departmentId} {
        // Only Admins can create, update, or delete departments.
        allow write: if request.auth != null && isAdmin();
        
        // Any authenticated user can read the list of departments.
        allow read: if request.auth != null;
    }
  }
}
